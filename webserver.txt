
https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-ubuntu-18-04

apt-key add cameron.asc



apt update
apt install apache2
ufw app list
ufw app info "Apache Full"

	Output:
	Profile: Apache Full
	Title: Web Server (HTTP,HTTPS)
	Description: Apache v2 is the next generation of the omnipresent Apache web
	server.
	
	Ports:
	  80,443/tcp


ufw allow in "Apache Full"


apt install mysql-server

mysql_secure_installation

#no for password validation alles andere Y

mysql

>SELECT user,authentication_string,plugin,host FROM mysql.user;
+------------------+-------------------------------------------+-----------------------+-----------+
| user             | authentication_string                     | plugin                | host      |
+------------------+-------------------------------------------+-----------------------+-----------+
| root             |                                           | auth_socket           | localhost |
| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| debian-sys-maint | *6129B55DFC5275442351C339002D1665C5772323 | mysql_native_password | localhost |
+------------------+-------------------------------------------+-----------------------+-----------+
4 rows in set (0.00 sec)

mysql> ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';

FLUSH PRIVILEGES;

mysql> SELECT user,authentication_string,plugin,host FROM mysql.user;
+------------------+-------------------------------------------+-----------------------+-----------+
| user             | authentication_string                     | plugin                | host      |
+------------------+-------------------------------------------+-----------------------+-----------+
| root             | *68F60CBB73A56DF6FB52BD3C589EB609CF1798E8 | mysql_native_password | localhost |
| mysql.session    | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| mysql.sys        | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password | localhost |
| debian-sys-maint | *6129B55DFC5275442351C339002D1665C5772323 | mysql_native_password | localhost |
+------------------+-------------------------------------------+-----------------------+-----------+


apt install php libapache2-mod-php php-mysql

nano /etc/apache2/mods-enabled/dir.conf

<IfModule mod_dir.c>
    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
</IfModule>

systemctl restart apache2

systemctl status apache2


apt search php- | less

apt show php-cli


mkdir /var/www/your_domain


chown www-data:www-data /var/www/joomla/
chmod -R 755 /var/www/joomla/

nano /var/www/joomla/index.html

<html>
    <head>
        <title>Welcome to Your_domain!</title>
    </head>
    <body>
        <h1>Success!  The your_domain server block is working!</h1>
    </body>
</html>


mkdir /var/www/wordpress


chown www-data:www-data /var/www/wordpress/
chmod -R 755 /var/www/wordpress/

nano /var/www/wordpress/index.html


______________________________________________________

https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-phpmyadmin-on-ubuntu-18-04


apt install phpmyadmin php-mbstring php-gettext

## apache2 muss selected werden

## Passwort für PHPmyadmin eingeben

##in mysql einstegen wenn rootpasswort schon vergeben
mysql -u root -p

##secure myphpadmin
nano /etc/apache2/conf-available/phpmyadmin.conf

add 

<Directory /usr/share/phpmyadmin>  ## existing
    Options FollowSymLinks     ## existing
    DirectoryIndex index.php   ## existing
    AllowOverride All    ### to add by admin

service apache2 restart

##htaccess anlegen
nano /usr/share/phpmyadmin/.htaccess

#insert
#
AuthType Basic
AuthName "Restricted Files"
AuthUserFile /etc/phpmyadmin/.htpasswd
Require valid-user
#

################
Here is what each of these lines mean:

    AuthType Basic: This line specifies the authentication type that you are implementing. This type will implement password authentication using a password file.
    AuthName: This sets the message for the authentication dialog box. You should keep this generic so that unauthorized users won’t gain any information about what is being protected.
    AuthUserFile: This sets the location of the password file that will be used for authentication. This should be outside of the directories that are being served. We will create this file shortly.
    Require valid-user: This specifies that only authenticated users should be given access to this resource. This is what actually stops unauthorized users from entering.

############

now create this file and pass it an initial user with the htpasswd utility:

htpasswd -c /etc/phpmyadmin/.htpasswd "username"


#########

#turn off access logging
# in virtual hsot conf datei